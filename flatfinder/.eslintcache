[{"/Users/szymongruszczynski/development/wat/ai/Spring-FlatFinder/flatfinder/src/index.js":"1","/Users/szymongruszczynski/development/wat/ai/Spring-FlatFinder/flatfinder/src/reportWebVitals.js":"2","/Users/szymongruszczynski/development/wat/ai/Spring-FlatFinder/flatfinder/src/App.js":"3","/Users/szymongruszczynski/development/wat/ai/Spring-FlatFinder/flatfinder/src/components/layout/Navbar.js":"4","/Users/szymongruszczynski/development/wat/ai/Spring-FlatFinder/flatfinder/src/components/home/Home.js":"5","/Users/szymongruszczynski/development/wat/ai/Spring-FlatFinder/flatfinder/src/components/home/Form.js":"6","/Users/szymongruszczynski/development/wat/ai/Spring-FlatFinder/flatfinder/src/customhook/useInput.js":"7","/Users/szymongruszczynski/development/wat/ai/Spring-FlatFinder/flatfinder/src/store/reducers/apartments.js":"8","/Users/szymongruszczynski/development/wat/ai/Spring-FlatFinder/flatfinder/src/store/actions/apartments.js":"9","/Users/szymongruszczynski/development/wat/ai/Spring-FlatFinder/flatfinder/src/components/layout/SearchBar.js":"10","/Users/szymongruszczynski/development/wat/ai/Spring-FlatFinder/flatfinder/src/components/layout/Apartament.js":"11","/Users/szymongruszczynski/development/wat/ai/Spring-FlatFinder/flatfinder/src/components/layout/LocationPin.js":"12"},{"size":983,"mtime":1610136178831,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1610126678860,"results":"15","hashOfConfig":"14"},{"size":396,"mtime":1610144709988,"results":"16","hashOfConfig":"14"},{"size":1175,"mtime":1610141388839,"results":"17","hashOfConfig":"14"},{"size":4746,"mtime":1610149299946,"results":"18","hashOfConfig":"14"},{"size":1262,"mtime":1610136240935,"results":"19","hashOfConfig":"14"},{"size":342,"mtime":1610131385119,"results":"20","hashOfConfig":"14"},{"size":1440,"mtime":1610135720705,"results":"21","hashOfConfig":"14"},{"size":693,"mtime":1610139258677,"results":"22","hashOfConfig":"14"},{"size":7130,"mtime":1610145892092,"results":"23","hashOfConfig":"14"},{"size":2964,"mtime":1610150255559,"results":"24","hashOfConfig":"14"},{"size":312,"mtime":1610150498669,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"xkj4oj",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"29"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"29"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"29"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"29"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"29"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"29"},"/Users/szymongruszczynski/development/wat/ai/Spring-FlatFinder/flatfinder/src/index.js",["61"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\n\nimport { Provider } from \"react-redux\";\nimport ReduxThunk from \"redux-thunk\";\nimport thunk from \"redux-thunk\";\nimport apartmentsReducer from \"./store/reducers/apartments\";\n\nconst rootReducer = combineReducers({\n  apartments: apartmentsReducer,\n});\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(ReduxThunk)\n  // jakies firebasowe rzeczy w compose\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["62","63"],"/Users/szymongruszczynski/development/wat/ai/Spring-FlatFinder/flatfinder/src/reportWebVitals.js",[],"/Users/szymongruszczynski/development/wat/ai/Spring-FlatFinder/flatfinder/src/App.js",[],"/Users/szymongruszczynski/development/wat/ai/Spring-FlatFinder/flatfinder/src/components/layout/Navbar.js",["64","65","66","67","68","69"],"import React, { useContext, useEffect, useState } from \"react\";\nimport \"./Navbar.css\";\nimport logo from \"../../images/logo.png\";\nimport heart from \"../../images/heart.png\";\nimport logout from \"../../images/logout.png\";\n// import { logOut } from \"../actions/auth\";\n// import { Redirect, Link } from \"react-router-dom\";\n// import { AuthContext } from \"../contexts/AuthContext\";\n\nimport { Link, NavLink, Redirect } from \"react-router-dom\";\nexport const Navbar = () => {\n  const [isAuthenticated, setIsAuthenticated] = useState(true);\n  const logOut = () => {\n    localStorage.removeItem(\"token\");\n    localStorage.removeItem(\"access\");\n  };\n  return (\n    <div className=\"navbar\">\n      <div className=\"logo-container\">\n        <img src={logo} alt=\"Logo\" className=\"logo\" />\n        <h1>Flat Finder</h1>\n      </div>\n      <ul>\n        <Link to=\"/\">\n          <li className=\"\">Home</li>\n        </Link>\n      </ul>\n\n      <div className=\"icons-container\">\n        {isAuthenticated && (\n          <Link to=\"/login\">\n            <img src={logout} alt=\"Logo\" className=\"icon\" onClick={logOut} />\n          </Link>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default Navbar;\n","/Users/szymongruszczynski/development/wat/ai/Spring-FlatFinder/flatfinder/src/components/home/Home.js",["70","71","72","73","74","75"],"import React, { useState, useEffect, useCallback } from \"react\";\nimport Form from \"./Form\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport * as apartmentsActions from \"../../store/actions/apartments\";\nimport SearchBar from \"../layout/SearchBar\";\nimport { Circles, Puff } from \"@agney/react-loading\";\nimport \"../layout/Apartaments.css\";\nimport Apartament from \"../layout/Apartament\";\n\nconst Home = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const apartments = useSelector((state) => state.apartments.apartments);\n  const [filtered_apartaments, setFilteredApartaments] = useState([]);\n\n  const [error, setError] = useState();\n  const dispatch = useDispatch();\n\n  const loadApartments = useCallback(async () => {\n    setError(null);\n    try {\n      await dispatch(apartmentsActions.getApartments());\n    } catch (err) {\n      setError(err.message);\n    }\n  }, [dispatch, setIsLoading, setError]);\n\n  useEffect(() => {\n    setIsLoading(true);\n    loadApartments().then(() => {\n      setIsLoading(false);\n    });\n  }, [dispatch, loadApartments]);\n\n  const handleClickSearch = (\n    searchDescription,\n    area,\n    price,\n    district,\n    pricePerM\n  ) => {\n    var area_min = area.min;\n    var area_max = area.max;\n    var price_min = price.min;\n    var price_max = price.max;\n    var price_per_m_min = pricePerM.min;\n    var price_per_m_max = pricePerM.max;\n    console.log(price_per_m_min);\n    console.log(price_per_m_max);\n\n    if (!(area_min || area_max)) {\n      area_min = 0;\n      area_max = 99999999;\n    }\n    if (!(price_min || price_max)) {\n      price_min = 0;\n      price_max = 99999999;\n    }\n    if (!(price_per_m_min || price_per_m_max)) {\n      price_per_m_min = 0;\n      price_per_m_max = 99999999;\n    }\n\n    setFilteredApartaments(\n      apartments.filter((apartment) => {\n        console.log(\"TYYYY\", apartment.price_per_m);\n        if (\n          apartment.description\n            .toLowerCase()\n            .includes(searchDescription.toLowerCase()) &&\n          area_min <= apartment.area &&\n          apartment.area <= area_max &&\n          price_min <= apartment.price &&\n          apartment.price <= price_max &&\n          price_per_m_min <= apartment.price_per_m &&\n          apartment.price_per_m <= price_per_m_max &&\n          apartment.place.toLowerCase().includes(district.toLowerCase())\n        ) {\n          return apartment;\n        }\n      })\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <SearchBar\n        handleClickSearch={() => {\n          handleClickSearch(handleClickSearch);\n        }}\n      ></SearchBar>\n      {/* <button onClick={refreshData}>REFRESH DATA</button> */}\n      {/* <div className=\"refresh\" onClick={() => refreshData()}>\n        <FontAwesomeIcon icon={[\"fa\", \"sync\"]} size=\"2x\" />\n      </div> */}\n\n      {isLoading ? (\n        <div className=\"puff\">\n          <Puff width=\"100\" />\n        </div>\n      ) : (\n        <div className=\"apartaments_list\">\n          {apartments.map((apartment) => {\n            console.log(apartment.is_favourite);\n            return (\n              <Apartament\n                key={apartment.apartment_id}\n                description={apartment.description}\n                place={apartment.district}\n                area={apartment.area}\n                price_per_m={apartment.price_per_m}\n                price={apartment.price}\n                source={apartment.source}\n                offer_url={apartment.offer_url}\n                rooms={apartment.rooms}\n                is_favourite={apartment.is_favourite}\n                img_url={apartment.img_url}\n                show_details={false}\n                lat={apartment.latitude}\n                lng={apartment.longitude}\n                //   notify={notify}\n                //   key={apartment.apartment_id}\n                //   description={apartment.description}\n                //   place={apartment.place}\n                //   area={apartment.area}\n                //   price_per_m={apartment.price_per_m}\n                //   price={apartment.price}\n                //   source={apartment.source}\n                //   offer_url={apartment.offer_url}\n                //   rooms={apartment.rooms}\n                //   is_favourite={apartment.is_favourite}\n                //   notify={notify}\n              />\n            );\n          })}\n        </div>\n      )}\n    </div>\n\n    //\n\n    // <div className=\"container\">\n    //   <Puff width=\"100\" />\n    //   <div className=\"container\">\n    //     <div className=\"row center-align\">\n    //       <div className=\"col s7\">\n    //         <Form />\n    //       </div>\n    //       <div className=\"col s5\">notelist</div>\n    //     </div>\n    //   </div>\n    // </div>\n  );\n};\n\nexport default Home;\n","/Users/szymongruszczynski/development/wat/ai/Spring-FlatFinder/flatfinder/src/components/home/Form.js",["76","77","78"],"import React from \"react\";\nimport useInput from \"../../customhook/useInput\";\n//import * as noteActions from \"../../store/actions/apartments\";\nimport { useDispatch } from \"react-redux\";\nconst Form = () => {\n  const [title, bindTitle, resetTitle] = useInput();\n  const [content, bindContent, resetContent] = useInput();\n  const dispatch = useDispatch();\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // dispatch(noteActions.addNote());\n    resetTitle();\n    resetContent();\n  };\n  return (\n    <div className=\"section\">\n      <form onSubmit={handleSubmit} className=\"white\">\n        <h5 className=\"grey-text\">New note</h5>\n        <div className=\"input-field \">\n          <input\n            id=\"note_title\"\n            type=\"text\"\n            className=\"validate\"\n            {...bindTitle}\n          ></input>\n          <label htmlFor=\"note_title\">Note Title</label>\n        </div>\n        <div className=\"input-field\">\n          <textarea\n            id=\"note_content\"\n            className=\"materialize-textarea\"\n            {...bindContent}\n          ></textarea>\n          <label htmlFor=\"note_content\">Note Content</label>\n        </div>\n        <button className=\"btn green\">Add</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Form;\n","/Users/szymongruszczynski/development/wat/ai/Spring-FlatFinder/flatfinder/src/customhook/useInput.js",[],["79","80"],"/Users/szymongruszczynski/development/wat/ai/Spring-FlatFinder/flatfinder/src/store/reducers/apartments.js",["81"],"import { GET_APARTMENTS } from \"../actions/apartments\";\n\nconst initialState = {\n  apartments: [],\n};\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_APARTMENTS:\n      console.log(\"Reducer here!\");\n      return {\n        apartments: action.apartments,\n      };\n    // case ADD_EVENT:\n    //   const newEvent = new Event(\n    //     action.eventData.name,\n    //     action.eventData.desc,\n    //     action.eventData.date,\n    //     action.eventData.time,\n    //     action.eventData.tripParent\n    //   );\n    //   return {\n    //     tripEvents: state.tripEvents.concat(newEvent),\n    //   };\n    // case EDIT_EVENT:\n    //   let tmpTripEvents = state.tripEvents;\n    //   tmpTripEvents.forEach(function (event, index, array) {\n    //     if (event.id == action.eventData.id) {\n    //       array[index] = {\n    //         ...event,\n    //         title: action.eventData.eventName,\n    //         description: action.eventData.eventDesc,\n    //         date: action.eventData.eventDate,\n    //         time: action.eventData.time,\n    //       };\n    //     }\n    //   });\n    //   return {\n    //     ...state,\n    //     tripEvents: tmpTripEvents,\n    //   };\n\n    // case DELETE_EVENT:\n    //   return {\n    //     //...state,\n    //     tripEvents: state.tripEvents.filter(\n    //       (event) => event.id !== action.eventId\n    //     ),\n    //   };\n    default:\n      return state;\n  }\n};\n","/Users/szymongruszczynski/development/wat/ai/Spring-FlatFinder/flatfinder/src/store/actions/apartments.js",["82","83"],"import axios from \"axios\";\nexport const GET_APARTMENTS = \"GET_APARTMENTS\";\n\nexport const getApartments = () => {\n  return async (dispatch, getState) => {\n    console.log(\"Action here!\");\n    let apartments = [];\n    const config = {\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Headers\": \"*\",\n      },\n    };\n\n    await fetch(\"http://localhost:8080/api/offers\")\n      .then((response) => response.json())\n      .then((json) => {\n        console.log(json);\n        apartments = json;\n      })\n      .catch((error) => {\n        console.error(error);\n      });\n    dispatch({\n      type: GET_APARTMENTS,\n      apartments: apartments,\n    });\n  };\n};\n","/Users/szymongruszczynski/development/wat/ai/Spring-FlatFinder/flatfinder/src/components/layout/SearchBar.js",["84"],"import React, { useState } from \"react\";\n// import \"./Apartaments.css\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport {\n  faSearch,\n  faPlus,\n  faMinus,\n  faTimes,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./SearchBar.css\";\nconst SearchBar = (props) => {\n  const [districtsList, setDistrictsList] = useState([\n    // \"\",\n    \"Bielany\",\n    \"Wola\",\n    \"Żoliborz\",\n    \"Mokotów\",\n  ]);\n\n  const [rooms, setRooms] = useState(0);\n  const [area, setArea] = useState({\n    min: \"\",\n    max: \"\",\n  });\n  const [price, setPrice] = useState({\n    min: \"\",\n    max: \"\",\n  });\n  const [pricePerM, setPricePerM] = useState({\n    min: \"\",\n    max: \"\",\n  });\n  const [description, setDesctiption] = useState(\"\");\n  const [district, setDistrict] = useState(\"\");\n\n  library.add(faSearch, faPlus, faMinus, faTimes);\n\n  const handleChangeDescription = (enteredDescription) => {\n    setDesctiption(enteredDescription);\n  };\n\n  return (\n    <div className=\"main-container\">\n      <div className=\"search-bar\">\n        <div className=\"search-description\">\n          <h5>Description</h5>\n          <div className=\"row\">\n            <input\n              className=\"description-input\"\n              value={description}\n              onChange={(e) => {\n                handleChangeDescription(e.target.value);\n              }}\n            ></input>\n            <div\n              className=\"close-icon\"\n              onClick={() => {\n                setDesctiption(\"\");\n              }}\n            >\n              <FontAwesomeIcon\n                icon={[\"fa\", \"times\"]}\n                size=\"xs\"\n                color=\"#dddddd\"\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"search-description\">\n          <h5>Rooms</h5>\n          <div className=\"row\">\n            <div\n              className=\"plus\"\n              onClick={() => {\n                setRooms(rooms - 1);\n              }}\n            >\n              <FontAwesomeIcon\n                icon={[\"fa\", \"minus\"]}\n                style={{ fontSize: \"0.5em\" }}\n                color=\"#dddddd\"\n              />\n            </div>\n            <h5 value={rooms}>{rooms}</h5>\n\n            <div\n              className=\"plus\"\n              onClick={() => {\n                setRooms(rooms + 1);\n              }}\n            >\n              <FontAwesomeIcon\n                icon={[\"fa\", \"plus\"]}\n                color=\"#dddddd\"\n                style={{ fontSize: \"0.5em\" }}\n              />\n            </div>\n            <div\n              className=\"close-icon\"\n              onClick={() => {\n                setRooms(0);\n              }}\n            >\n              <FontAwesomeIcon\n                icon={[\"fa\", \"times\"]}\n                size=\"xs\"\n                color=\"#dddddd\"\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"search-description\">\n          <h5>Area</h5>\n\n          <div className=\"row\">\n            <div className=\"input-container\">\n              <input\n                value={area.min}\n                className=\"area-input\"\n                onChange={(e) => {\n                  setArea({ ...area, min: e.target.value });\n                }}\n              ></input>\n              <h5>m²</h5>\n            </div>\n\n            <h5>-</h5>\n            <div className=\"input-container\">\n              <input\n                value={area.max}\n                className=\"area-input\"\n                onChange={(e) => setArea({ ...area, max: e.target.value })}\n              ></input>\n              <h5>m²</h5>\n            </div>\n            <div\n              className=\"close-icon\"\n              onClick={() => {\n                setArea({ min: \"\", max: \"\" });\n              }}\n            >\n              <FontAwesomeIcon\n                icon={[\"fa\", \"times\"]}\n                size=\"xs\"\n                color=\"#dddddd\"\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"search-description\">\n          <h5>Price</h5>\n          <div className=\"row\">\n            <div className=\"input-container\">\n              <input\n                value={price.min}\n                className=\"price-input\"\n                onChange={(e) => setPrice({ ...price, min: e.target.value })}\n              ></input>\n              <h5>PLN</h5>\n            </div>\n\n            <h5> - </h5>\n            <div className=\"input-container\">\n              <input\n                className=\"price-input\"\n                value={price.max}\n                onChange={(e) => setPrice({ ...price, max: e.target.value })}\n              ></input>\n              <h5>PLN</h5>\n            </div>\n            <div\n              className=\"close-icon\"\n              onClick={() => {\n                setPrice({ min: \"\", max: \"\" });\n              }}\n            >\n              <FontAwesomeIcon\n                icon={[\"fa\", \"times\"]}\n                size=\"xs\"\n                color=\"#dddddd\"\n              />\n            </div>\n          </div>\n        </div>\n        <div className=\"search-description\">\n          <h5>Price per m</h5>\n          <div className=\"row\">\n            <div className=\"input-container\">\n              <input\n                value={pricePerM.min}\n                className=\"price-input\"\n                onChange={(e) =>\n                  setPricePerM({ ...pricePerM, min: e.target.value })\n                }\n              ></input>\n              <h5>PLN</h5>\n            </div>\n            <h5> - </h5>\n            <div className=\"input-container\">\n              <input\n                className=\"price-input\"\n                value={pricePerM.max}\n                onChange={(e) =>\n                  setPricePerM({ ...pricePerM, max: e.target.value })\n                }\n              ></input>\n              <h5>PLN</h5>\n            </div>\n            <div\n              className=\"close-icon\"\n              onClick={() => {\n                setPricePerM({ min: \"\", max: \"\" });\n              }}\n            >\n              <FontAwesomeIcon\n                icon={[\"fa\", \"times\"]}\n                size=\"xs\"\n                color=\"#dddddd\"\n              />\n            </div>\n          </div>\n        </div>\n\n        <div className=\"search-description\">\n          <h5>Disctrict</h5>\n          <div className=\"select-district\">\n            <select\n              id=\"districts\"\n              name=\"districts\"\n              value={district}\n              className=\"select-dist\"\n              onChange={(e) => {\n                setDistrict(e.target.value);\n              }}\n            >\n              {districtsList.map((district) => {\n                return <option key={district}>{district}</option>;\n              })}\n            </select>\n          </div>\n        </div>\n      </div>\n      <div\n        className=\"search-button\"\n        onClick={() =>\n          props.handleClickSearch(description, area, price, district, pricePerM)\n        }\n      >\n        <FontAwesomeIcon icon={[\"fa\", \"search\"]} size=\"xs\" color=\"white\" />\n      </div>\n    </div>\n  );\n};\nexport default SearchBar;\n","/Users/szymongruszczynski/development/wat/ai/Spring-FlatFinder/flatfinder/src/components/layout/Apartament.js",["85"],"import React, { useState } from \"react\";\nimport \"./Apartaments.css\";\nimport flat from \"../../images/flat.jpg\";\nimport { library } from \"@fortawesome/fontawesome-svg-core\";\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport { faHeart as faRegularHeart } from \"@fortawesome/free-regular-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport GoogleMapReact from \"google-map-react\";\nimport LocationPin from \"./LocationPin\";\nconst Apartament = (props) => {\n  const [isFavourite, setIsFavourite] = useState(props.is_favourite);\n  const [isShowingDetails, setIsShowingDetails] = useState(\n    props.isShowingDetails\n  );\n  const [heart, setHeart] = useState(isFavourite ? \"pink\" : \"#b6b6b6\");\n  library.add(faHeart, faRegularHeart);\n  const location = {\n    address: \"1600 Amphitheatre Parkway, Mountain View, california.\",\n    lat: props.lat,\n    lng: props.lng,\n  };\n\n  const heartHandler = () => {\n    setIsFavourite(!isFavourite);\n    if (isFavourite) {\n      setHeart(\"pink\");\n    } else {\n      setHeart(\"#b6b6b6\");\n    }\n    props.notify(isFavourite);\n  };\n\n  return (\n    <div>\n      <div className=\"apartament\">\n        <a href={props.offer_url}>\n          <img src={props.img_url} alt=\"Logo\" className=\"apartament_photo\" />\n        </a>\n        <div\n          className=\"contain\"\n          onClick={() => setIsShowingDetails(!isShowingDetails)}\n        >\n          <div className=\"apartament_info\">\n            <div className=\"header\">\n              <a href={props.offer_url}>\n                <h2>{props.description} </h2>\n              </a>\n            </div>\n            <h3>Dzielnica: {props.place}</h3>\n            <h3>Cena: {props.price} </h3>\n            <h3>Cena za metr: {(props.price / props.area).toFixed(0)} zł</h3>\n            <h3>Powierzchnia: {props.area}</h3>\n            <h3>Portal: {props.source}</h3>\n            <h3>Pokoje: {props.rooms}</h3>\n          </div>\n          <div className=\"icon\">\n            <FontAwesomeIcon\n              icon={[\"far\", \"heart\"]}\n              color={heart}\n              size=\"2x\"\n              onClick={heartHandler}\n            />\n          </div>\n        </div>\n      </div>\n      {isShowingDetails && (\n        <div className=\"apartment_details\">\n          <div className=\"google-map\">\n            <GoogleMapReact\n              bootstrapURLKeys={{\n                key: \"AIzaSyAXszJlRJjCSrP2G3WawzciISDY6v4B9FU\",\n              }}\n              defaultCenter={{\n                address:\n                  \"1600 Amphitheatre Parkway, Mountain View, california.\",\n                lat: props.lat,\n                lng: props.lng,\n              }}\n              defaultZoom={14}\n            >\n              <LocationPin\n                lat={location.lat}\n                lng={location.lng}\n                text={location.address}\n              />\n            </GoogleMapReact>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Apartament;\n","/Users/szymongruszczynski/development/wat/ai/Spring-FlatFinder/flatfinder/src/components/layout/LocationPin.js",["86","87"],"import { Icon } from \"@iconify/react\";\nimport locationIcon from \"@iconify/icons-mdi/map-marker\";\n\nconst LocationPin = ({ text }) => (\n  <div className=\"pin\">\n    {/* <Icon icon={locationIcon} className=\"pin-icon\" /> */}\n    Pinezka\n    <p className=\"pin-text\">{text}</p>\n  </div>\n);\n\nexport default LocationPin;\n",{"ruleId":"88","severity":1,"message":"89","line":10,"column":8,"nodeType":"90","messageId":"91","endLine":10,"endColumn":13},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"88","severity":1,"message":"96","line":1,"column":17,"nodeType":"90","messageId":"91","endLine":1,"endColumn":27},{"ruleId":"88","severity":1,"message":"97","line":1,"column":29,"nodeType":"90","messageId":"91","endLine":1,"endColumn":38},{"ruleId":"88","severity":1,"message":"98","line":4,"column":8,"nodeType":"90","messageId":"91","endLine":4,"endColumn":13},{"ruleId":"88","severity":1,"message":"99","line":10,"column":16,"nodeType":"90","messageId":"91","endLine":10,"endColumn":23},{"ruleId":"88","severity":1,"message":"100","line":10,"column":25,"nodeType":"90","messageId":"91","endLine":10,"endColumn":33},{"ruleId":"88","severity":1,"message":"101","line":12,"column":27,"nodeType":"90","messageId":"91","endLine":12,"endColumn":45},{"ruleId":"88","severity":1,"message":"102","line":2,"column":8,"nodeType":"90","messageId":"91","endLine":2,"endColumn":12},{"ruleId":"88","severity":1,"message":"103","line":6,"column":10,"nodeType":"90","messageId":"91","endLine":6,"endColumn":17},{"ruleId":"88","severity":1,"message":"104","line":13,"column":10,"nodeType":"90","messageId":"91","endLine":13,"endColumn":30},{"ruleId":"88","severity":1,"message":"105","line":15,"column":10,"nodeType":"90","messageId":"91","endLine":15,"endColumn":15},{"ruleId":"106","severity":1,"message":"107","line":25,"column":6,"nodeType":"108","endLine":25,"endColumn":40,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":64,"column":37,"nodeType":"112","messageId":"113","endLine":64,"endColumn":39},{"ruleId":"88","severity":1,"message":"114","line":6,"column":10,"nodeType":"90","messageId":"91","endLine":6,"endColumn":15},{"ruleId":"88","severity":1,"message":"115","line":7,"column":10,"nodeType":"90","messageId":"91","endLine":7,"endColumn":17},{"ruleId":"88","severity":1,"message":"116","line":8,"column":9,"nodeType":"90","messageId":"91","endLine":8,"endColumn":17},{"ruleId":"92","replacedBy":"117"},{"ruleId":"94","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":6,"column":1,"nodeType":"121","endLine":52,"endColumn":3},{"ruleId":"88","severity":1,"message":"122","line":1,"column":8,"nodeType":"90","messageId":"91","endLine":1,"endColumn":13},{"ruleId":"88","severity":1,"message":"123","line":8,"column":11,"nodeType":"90","messageId":"91","endLine":8,"endColumn":17},{"ruleId":"88","severity":1,"message":"124","line":13,"column":25,"nodeType":"90","messageId":"91","endLine":13,"endColumn":41},{"ruleId":"88","severity":1,"message":"125","line":3,"column":8,"nodeType":"90","messageId":"91","endLine":3,"endColumn":12},{"ruleId":"88","severity":1,"message":"126","line":1,"column":10,"nodeType":"90","messageId":"91","endLine":1,"endColumn":14},{"ruleId":"88","severity":1,"message":"127","line":2,"column":8,"nodeType":"90","messageId":"91","endLine":2,"endColumn":20},"no-unused-vars","'thunk' is defined but never used.","Identifier","unusedVar","no-native-reassign",["128"],"no-negated-in-lhs",["129"],"'useContext' is defined but never used.","'useEffect' is defined but never used.","'heart' is defined but never used.","'NavLink' is defined but never used.","'Redirect' is defined but never used.","'setIsAuthenticated' is assigned a value but never used.","'Form' is defined but never used.","'Circles' is defined but never used.","'filtered_apartaments' is assigned a value but never used.","'error' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback has an unnecessary dependency: 'setIsLoading'. Either exclude it or remove the dependency array.","ArrayExpression",["130"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'title' is assigned a value but never used.","'content' is assigned a value but never used.","'dispatch' is assigned a value but never used.",["128"],["129"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'axios' is defined but never used.","'config' is assigned a value but never used.","'setDistrictsList' is assigned a value but never used.","'flat' is defined but never used.","'Icon' is defined but never used.","'locationIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},"Update the dependencies array to be: [dispatch, setError]",{"range":"133","text":"134"},[893,927],"[dispatch, setError]"]